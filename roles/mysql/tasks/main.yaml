# ---------------------------------------------------------------------------------------------------------------------- #
# Install dependencies

- name: Install MySQL
  ansible.builtin.apt:
    name: 
      - mysql-server
      - python3-pymysql

# ---------------------------------------------------------------------------------------------------------------------- #
# Configure MySQL

- name: Bind to public address
  ansible.builtin.copy:
    src: address.cnf
    dest: /etc/mysql/mysql.conf.d/override.cnf 
  notify:
    - Restart MySQL

# ---------------------------------------------------------------------------------------------------------------------- #
# Create Agama database

- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

# ---------------------------------------------------------------------------------------------------------------------- #
# Create necessary users

- name: MySQL agama user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: MySQL backup user
  community.mysql.mysql_user:
    name: "{{ backup_user }}"
    password: "{{ backup_user_mysql_password }}"
    priv: "{{ mysql_database }}.*:LOCK TABLES,SELECT"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: MySQL exporter user
  community.mysql.mysql_user:
    name: "{{ mysql_exporter_user }}"
    password: "{{ mysql_exporter_password }}"
    host: "%"
    resource_limits: 
      MAX_USER_CONNECTIONS: 3
    priv: '*.*:PROCESS,REPLICATION CLIENT'
    login_unix_socket: /var/run/mysqld/mysqld.sock    

# ---------------------------------------------------------------------------------------------------------------------- #
# Template my.cnf files for users

- name: Template prometheus my.cnf
  ansible.builtin.template:
    src: prometheus.my.cnf.j2
    dest: /var/lib/prometheus/.my.cnf
    owner: prometheus
    group: prometheus
    mode: '0640' 
  notify:
    - Restart MySQL exporter

- name: Template backup my.cnf
  ansible.builtin.template:
    src: backup.my.cnf.j2
    dest: "{{ backup_user_home }}/.my.cnf"
    owner: "{{ backup_user }}"
    group: "{{ backup_user }}"
    mode: '0600' 

# ---------------------------------------------------------------------------------------------------------------------- #
# Backup

- name: Create backup directories
  file:
    state: directory
    path: "{{ backup_user_home }}/{{ item }}"
    owner: "{{ backup_user }}"
    group: "{{ backup_user }}"
    mode: '0700'
  loop:
    - mysql
    - restore

- name: Create backup cron tab
  template:
    src: mysql-backup.j2
    dest: /etc/cron.d/mysql-backup

# ---------------------------------------------------------------------------------------------------------------------- #
# Prometheus exporter
# Note! This task MUST BE AFTER "Template prometheus my.cnf" task

- name: Install MySQL exporter
  ansible.builtin.apt:
    name: prometheus-mysqld-exporter 

- name: Copy prometheus-mysqld-exporter
  copy:
    src: prometheus-mysqld-exporter
    dest: /etc/default/prometheus-mysqld-exporter
  notify:
    - Restart MySQL exporter
# ---------------------------------------------------------------------------------------------------------------------- #
# Service

- name: Service MySQL
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: true

- name: Service MySQL exporter
  ansible.builtin.service:
    name: prometheus-mysqld-exporter
    state: started
    enabled: true
