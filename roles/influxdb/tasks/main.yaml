# ---------------------------------------------------------------------------------------------------------------------- #
# Installing dependencies

- name: Create /etc/apt/keyrings/
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory

- name: Import InfluxData GPG key
  ansible.builtin.apt_key: 
    url: https://repos.influxdata.com/influxdata-archive_compat.key
    keyring: /etc/apt/keyrings/influxdata-archive_compat.gpg
    state: present

- name: Add InfluxData repo
  ansible.builtin.apt_repository:
    repo: deb [signed-by=/etc/apt/keyrings/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main

- name: Install InfluxDB
  apt:
    name:
      - influxdb
      - telegraf


# ---------------------------------------------------------------------------------------------------------------------- #
# Configuration files

- name: Copy influxdb.conf
  copy:
    src: influxdb.conf
    dest: /etc/influxdb/influxdb.conf
  notify:
    - Restart InfluxDB

- name: Copy telegraf.conf
  copy:
    src: telegraf.conf
    dest: /etc/telegraf/telegraf.conf
  notify:
    - Restart Telegraf

# ---------------------------------------------------------------------------------------------------------------------- #
# Backup

- name: Create backup directories
  file:
    state: directory
    path: "{{ backup_user_home }}/{{ item }}"
    owner: "{{ backup_user }}"
    group: "{{ backup_user }}"
    mode: '0700'
  no_log: true
  loop:
    - influxdb
    - restore

- name: Create backup cron tab
  template:
    src: influxdb-backup.j2
    dest: /etc/cron.d/influxdb-backup

# ---------------------------------------------------------------------------------------------------------------------- #
# Prometheus exporter

- name: Download InfluxDB exporter
  ansible.builtin.get_url:
    url: https://github.com/carlpett/influxdb_stats_exporter/releases/download/v0.1.1/influx_stats_exporter_linux_amd64
    dest: /usr/local/bin/influx_exporter
    mode: 0755
    owner: prometheus
    group: prometheus

- name: Copy influxdb_exporter.service
  copy:
    src: influxdb_exporter.service
    dest: /etc/systemd/system/prometheus-influxdb-stats-exporter.service
  register: service_result
  notify: 
    - Restart InfluxDB exporter

- name: Command systemctl daemon-reload
  command: systemctl daemon-reload
  when: service_result is changed

# ---------------------------------------------------------------------------------------------------------------------- #
# Service

- name: Service InfluxDB
  service:
    name: influxdb
    enabled: true
    state: started

- name: Service Telgraf
  service:
    name: telegraf
    enabled: true
    state: started

- name: Service InfluxDB exporter
  service: 
    name: prometheus-influxdb-stats-exporter.service
    state: started

